# INSTRUCTIONS:
#
# condition				A diplomatic action can have any number of condition blocks, each with its own
#						tooltip, potential and allow section
#
# 	tooltip					Sets a custom text string similar to the hardcoded limits
# 							If no tooltip is scripted, the tooltip for the actual trigger will be shown
#							Note that the custom tooltip is only shown if the allow trigger is NOT met
#
# 	potential				Determines if the trigger is applicable or not
# 	allow					Determines if the action is valid or not
#
# effect				A diplomatic action can only have one effect block

# ROOT					actor
# FROM					target

########################################
# DIPLOMATIC ACTIONS
########################################
# royal_marriage
# declarewar
# requestpeace
# support_independence_action
# allianceaction
# embargoaction
# annexationaction
# integrationaction
# vassalaction
# guaranteeaction
# warningaction
# threaten_war
# milaccess
# fleet_access
# offer_fleet_access
# offermilaccess
# insultaction
# giftaction
# claimaction
# callaction
# offerloan
# warsubsidy
# sellprov
# imperial_relations_action
# imperial_realm_war_action
# religious_unity_action
# grant_electorate
# remove_electorate
# grant_freecity
# remove_freecity
# demand_unlawful_territory_action
# call_crusade_action
# excommunicate_action
# enforce_peace
# improve_relation
# fabricate_claim
# justify_trade_conflict
# transfer_trade_power
# infiltrate_administration
# sabotage_reputation
# support_rebels
# sow_discontent
# agitate_for_liberty
# form_coalition
# request_to_join_federation
# invite_to_federation
# support_heir
# break_marriage
# designate_march
# ask_for_march
# sell_ships_action
# abandon_union
# takeondebt
# influence_nation
# claim_states
# steer_trade
# stealmap
# spy_network
# invite_to_trade_league
# request_to_join_trade_league
# sharemap
# intervene_in_war
# break_alliance
# tributary_state_action
# ask_for_tributary_state_action
# knowledge_sharing

declarewar = {
	condition = {
		tooltip = AI_CANNOT_DECLARE_WHEN_STABILITY_LOSS
		potential = {
			ai = yes
		}
		allow = {
			ai = yes
			NOT = {
				has_global_modifier_value = {
					which = stability_cost_to_declare_war
					value = 1
				}
			}
		}
	}
	condition = {
		potential = {
			tag = NGT
			ai = yes
		}
		allow = {
			FROM = { has_reform = wildling_clan_reform }
		}
	}
	condition = {
		tooltip = CANT_FIGHT_NIGHTS_WATCH
		potential = {
			FROM = { tag = NGT }
			if = {
				limit = { hre_size = 1 }
				is_part_of_hre = yes
			}
			else = { is_dynasty_government = yes }
		}
		allow = { always = no }
	}
	condition = {
		tooltip = BOTH_COUNTRIES_RIVALRY
		potential = {
			westeros_government_king = yes
			FROM = { westeros_government_not_king = yes }
			if = {
				limit = { has_dlc = "Emperor" }
				NOT = { hre_reform_passed = king_expand_royal_laws }
			}
			else = { NOT = { hre_reform_passed = king_implement_royal_court_of_justice_nodlc } }
		}
		allow = {
			is_rival = FROM
			is_enemy = FROM
		}
	}
	condition = {
		tooltip = NEUTRALITY_PACT_RESTRICTION
		potential = { has_ruler_flag = truce_flag_with_@FROM }
		allow = { always = no }
	}
	effect = {
		# Used for 'Usurp Overlord' casus belli aftermath
		assign_temp_overlord_flag_effect = yes
	}
}

allianceaction = {
	condition = {
		tooltip = REPUBLIC_DENIED_ALLIANCE
		potential = {
			has_government_attribute = cannot_ally_non_republics
		}
		allow = {
			OR = {
				NOT = { has_government_attribute = cannot_ally_non_republics }
				FROM = { government = republic }
			}
		}
	}
	condition = {
		tooltip = FROM_REPUBLIC_DENIED_ALLIANCE
		potential = {
			FROM = {
				has_government_attribute = cannot_ally_non_republics
			}
			NOT = { government = republic }
		}
		allow = {
			OR = {
				government = republic
				NOT = { FROM = { has_government_attribute = cannot_ally_non_republics } }
			}
		}
	}
	condition = {
		tooltip = CANNOT_MAKE_ALLIANCES
		potential = {
			has_government_attribute = cannot_form_alliances
		}
		allow = {
			NOT = { has_government_attribute = cannot_form_alliances }
		}
	}
	condition = {
		tooltip = FROM_CANNOT_MAKE_ALLIANCES
		potential = {
			FROM = {
				has_government_attribute = cannot_form_alliances
			}
		}
		allow = {
			NOT = { FROM = { has_government_attribute = cannot_form_alliances } }
		}
	}
	condition = {
		tooltip = WHITE_WALKER_BLOCKED_ACTION_TT
		potential = {
			OR = {
				FROM = { tag = WIT }
				tag = WIT
			}
		}
		allow = { always = no }
	}
}

enforce_peace = {
	condition = {
		tooltip = ENFORCE_PEACE_KING_RESTRICTION_TT
		potential = {
			westeros_government_king = yes
			FROM = { westeros_government_not_king = yes }
		}
		allow = {
			OR = {
				if = {
					limit = { has_dlc = "Emperor" }
					hre_reform_passed = king_expand_royal_laws
				}
				else = { hre_reform_passed = king_implement_royal_court_of_justice_nodlc }
				FROM = {
					any_war_enemy_country = {
						has_opinion = {
							who = ROOT
							value = 0
						}
						alliance_with = ROOT
					}
				}
			}
		}
	}
}

royal_marriage = {
	condition = {
		tooltip = MARWAR
		potential = {
		}
		allow = {
			NOT = { war_with = FROM }
		}
	}
	condition = {
		tooltip = WHITE_WALKER_BLOCKED_ACTION_TT
		potential = {
			OR = {
				FROM = { tag = WIT }
				tag = WIT
			}
		}
		allow = { always = no }
	}
}

guaranteeaction = {
	condition = {
		tooltip = WHITE_WALKER_BLOCKED_ACTION_TT
		potential = {
			OR = {
				FROM = { tag = WIT }
				tag = WIT
			}
		}
		allow = { always = no }
	}
}

threaten_war = {
	
}

insultaction = {
	
}

giftaction = {
	
}

fabricate_claim = {
	condition = {
		tooltip = GOVT_REFORM_CANNOT_FABRICATE
		potential = {
			has_government_attribute = cannot_fabricate_claims
		}
		allow = { NOT = { has_government_attribute = cannot_fabricate_claims } }
	}

	condition = {
		tooltip = BOTH_COUNTRIES_RIVALRY
		potential = {
			westeros_government_king = yes
		}
		allow = {
			is_rival = FROM
			is_enemy = FROM
		}
	}

	# condition = {
	# 	tooltip = "Nobles houses of Westeros cannot fabricate claims on each other's lands"
	# 	potential = {
	# 		is_dynasty_government = yes
	# 		FROM = { is_dynasty_government = yes }
	# 		#is_subject_of_type = feudatory
	# 	}
	# 	allow = {
	# 		always = no
	# 	}
	# }
}

break_marriage = {
	
}

takeondebt = {
	
}

influence_nation = {
	
}

intervene_in_war = {
	
}

annexationaction = {
	condition = {
		tooltip = ANNEX_TOO_LOW
		potential = {
			FROM = {
				OR = {
					vassal_of = ROOT
					is_subject_of_type = feudatory
				}
			}
		}
		allow = {
			FROM = {
				has_opinion = {
					who = ROOT
					value = 190
				}
			}
		}
	}
	#condition = {
	#	tooltip = ANNEXINVALID
	#	potential = {
	#		FROM = {
	#			vassal_of = ROOT
	#		}
	#	}
	#	allow = {
	#		FROM = {
	#			years_in_vassalage_under = {
	#				who = ROOT
	#				years = 10
	#			}
	#		}
	#	}
	#}
	# condition = {
	# 	tooltip = CANNOT_ANNEX
	# 	potential = {
			
	# 	}
	# 	allow = {
			
	# 	}
	# }
	condition = {
		tooltip = NEEDS_50_CROWNLAND_TT
		potential = {
			has_government_attribute = need_crownland_to_annex
			NOT = { crown_land_share = 50 }
		}
		allow = {
			crown_land_share = 50
		}
	}
	condition = {
		tooltip = "You cannot annex Feudatory subjects."
		potential = { FROM = { is_subject_of_type = feudatory } }
		allow = {
			has_estate_privilege = estate_nobles_feudatory_annexation
		}
	}
	condition = {
		tooltip = WHITE_WALKER_BLOCKED_ACTION_TT
		potential = {
			OR = {
				FROM = { tag = WIT }
				tag = WIT
			}
		}
		allow = { always = no }
	}
}

integrationaction = {
	condition = {
		tooltip = INTEGRATETOOLOWDESC
		potential = {
			senior_union_with = FROM
		}
		allow = {
			FROM = {
				has_opinion = {
					who = ROOT
					value = 190
				}
			}
		}
	}
	condition = {
		tooltip = PUINTEGRATIONIMPOSSIBLE
		potential = {
			has_government_attribute = cannot_integrate_personal_unions
		}
		allow = {
			NOT = { has_government_attribute = cannot_integrate_personal_unions }
		}
	}
	# condition = {
	# 	tooltip = CANNOT_ANNEX
	# 	potential = {
			
	# 	}
	# 	allow = {
			
	# 	}
	# }
	condition = {
		tooltip = WHITE_WALKER_BLOCKED_ACTION_TT
		potential = {
			OR = {
				FROM = { tag = WIT }
				tag = WIT
			}
		}
		allow = { always = no }
	}
}

vassalaction = {
	condition = {
		tooltip = VASSALINVALID
		potential = {
		}
		allow = {
			alliance_with = FROM
			FROM = {
				has_opinion = {
					who = ROOT
					value = 190
				}
			}
			FROM = { is_at_war = no }
		}
	}
	
	condition = {
		tooltip = NIGHTSWATCH_VASSALISATION
		potential = {
			FROM = { tag = NGT }
		}
		allow = { always = no }
	}
	
	condition = {
		tooltip = WHITE_WALKER_BLOCKED_ACTION_TT
		potential = {
			OR = {
				FROM = { tag = WIT }
				tag = WIT
			}
		}
		allow = { always = no }
	}
}

abandon_union_action = {
	condition = {
		potential = {
		}
		allow = {
			ROOT = {
				senior_union_with = FROM
				is_at_war = no
			}
		}
	}
	condition = {
		tooltip = PUABANDONINGIMPOSSIBLE
		potential = {
			has_government_attribute = cannot_abandon_personal_unions
		}
		allow = {
			NOT = { has_government_attribute = cannot_abandon_personal_unions }
		}
	}
}

form_coalition = {
	condition = {
		tooltip = MINAGGRESSIVEEXPANSION
		potential = {	
		}
		allow = {
			has_opinion_modifier = {
				modifier = aggressive_expansion
				who = FROM
			}		
			NOT = {
				has_opinion_modifier = {
					modifier = aggressive_expansion
					who = FROM
					value = -49
				}
			}
		}
	}
	condition = {
		tooltip = WHITE_WALKER_BLOCKED_ACTION_TT
		potential = {
			OR = {
				FROM = { tag = WIT }
				tag = WIT
			}
		}
		allow = { always = no }
	}
}

request_to_join_trade_league = {
	condition = {
		tooltip = NOT_RELEVANT_TRADE_REGION_FROM
		potential = {
		}
		allow = {
			home_trade_node = {
				trade_share = {
					country = from
					share = 1
				}
			}
		}
	}
}

invite_to_trade_league = {
	condition = {
		tooltip = NOT_RELEVANT_TRADE_REGION
		potential = {
		}
		allow = {
			from = {
				home_trade_node = {
					trade_share = {
						country = root
						share = 1
					}
				}
			}
		}
	}
}

tributary_state_action = {
	condition = {
		potential = {
			ai = yes
		}
		allow = {
			OR = {
				NOT = { ROOT = { capital_scope = { superregion = far_essos_superregion } } }
				AND = {
					ROOT = { capital_scope = { superregion = far_essos_superregion } }
					NOT = { FROM = { capital_scope = { superregion = far_essos_superregion } } }
				}
			}
			OR = {
				NOT = { ROOT = { capital_scope = { region = region_qarth } } }
				AND = {
					ROOT = { capital_scope = { region = region_qarth } }
					NOT = { FROM = { capital_scope = { region = region_qarth } } }
				}
			}
			OR = {
				NOT = { ROOT = { capital_scope = { region = region_slavers_bay } } }
				AND = {
					ROOT = { capital_scope = { region = region_slavers_bay } }
					NOT = { FROM = { capital_scope = { region = region_slavers_bay } } }
				}
			}
		}
	}
}

ask_for_tributary_state_action = {
	condition = {
		potential = {
			ai = yes
		}
		allow = {
			OR = {
				NOT = { ROOT = { capital_scope = { superregion = far_essos_superregion } } }
				AND = {
					ROOT = { capital_scope = { superregion = far_essos_superregion } }
					NOT = { FROM = { capital_scope = { superregion = far_essos_superregion } } }
				}
			}
			OR = {
				NOT = { ROOT = { capital_scope = { region = region_qarth } } }
				AND = {
					ROOT = { capital_scope = { region = region_qarth } }
					NOT = { FROM = { capital_scope = { region = region_qarth } } }
				}
			}
			OR = {
				NOT = { ROOT = { capital_scope = { region = region_slavers_bay } } }
				AND = {
					ROOT = { capital_scope = { region = region_slavers_bay } }
					NOT = { FROM = { capital_scope = { region = region_slavers_bay } } }
				}
			}
		}
	}
}

break_alliance = {
	effect = {
		on_alliance_broken_effect = yes
	}
}

requestpeace = {
	
}

support_independence_action = {
	condition = {
		tooltip = WHITE_WALKER_BLOCKED_ACTION_TT
		potential = {
			OR = {
				FROM = { tag = WIT }
				tag = WIT
			}
		}
		allow = { always = no }
	}
}

embargoaction = {
	
}

warningaction = {
	condition = {
		tooltip = WHITE_WALKER_BLOCKED_ACTION_TT
		potential = {
			OR = {
				FROM = { tag = WIT }
				tag = WIT
			}
		}
		allow = { always = no }
	}
}

milaccess = {
	
}

fleet_access = {
	
}

offer_fleet_access = {
	
}

offermilaccess = {
	
}

claimaction = {
	
}

callaction = {
	condition = {
		tooltip = "They are in the Blackfyre Rebellion."
		potential = {
			FROM = {
				has_disaster = blackfyre_rebellion
			}
		}
		allow = { always = no }
	}
}

offerloan = {
	
}

warsubsidy = {
	
}

sellprov = {
	
}

imperial_relations_action = {
	
}

imperial_realm_war_action = {
	
}

religious_unity_action = {
	
}

grant_electorate = {
	condition = {
		tooltip = "Disabled mechanic"
		potential = {
			always = yes
		}
		allow = { always = no }
	}
}

remove_electorate = {
	condition = {
		tooltip = "Disabled mechanic"
		potential = { always = yes }
		allow = { always = no }
	}
}

grant_freecity = {
	
}

remove_freecity = {
	
}

demand_unlawful_territory_action = {
	
}

call_crusade_action = {
	
}

excommunicate_action = {
	
}

improve_relation = {
	condition = {
		tooltip = WHITE_WALKER_BLOCKED_ACTION_TT
		potential = {
			OR = {
				FROM = { tag = WIT }
				tag = WIT
			}
		}
		allow = { always = no }
	}
}

justify_trade_conflict = {
	
}

transfer_trade_power = {
	
}

infiltrate_administration = {
	condition = {
		tooltip = WHITE_WALKER_BLOCKED_ACTION_TT
		potential = {
			OR = {
				FROM = { tag = WIT }
				tag = WIT
			}
		}
		allow = { always = no }
	}
}

sabotage_reputation = {
	condition = {
		tooltip = WHITE_WALKER_BLOCKED_ACTION_TT
		potential = {
			OR = {
				FROM = { tag = WIT }
				tag = WIT
			}
		}
		allow = { always = no }
	}
}

support_rebels = {
	condition = {
		tooltip = WHITE_WALKER_BLOCKED_ACTION_TT
		potential = {
			OR = {
				FROM = { tag = WIT }
				tag = WIT
			}
		}
		allow = { always = no }
	}
}

sow_discontent = {
	
}

agitate_for_liberty = {
	condition = {
		tooltip = WHITE_WALKER_BLOCKED_ACTION_TT
		potential = {
			OR = {
				FROM = { tag = WIT }
				tag = WIT
			}
		}
		allow = { always = no }
	}
}

request_to_join_federation = {
	
}

invite_to_federation = {
	
}

support_heir = {
	
}

designate_march = {
	
}

ask_for_march = {
	
}

sell_ships_action = {
	
}

claim_states = {
	
}

steer_trade = {
	
}

stealmap = {
	
}

spy_network = {
	
}

sharemap = {
	
}

knowledge_sharing = {
	
}