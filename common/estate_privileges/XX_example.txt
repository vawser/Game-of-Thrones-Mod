#All scopes are country scope
#All parameters are optional

# estate_privilege = {
#	icon = icon_name							#Icon for this privilege
#	loyalty = float								#Change in loyalty from this privilege
#	influence = float							#Change in influence from this privilege
#	land_share = float							#Change in crownlands from this privilege
#	max_absolutism = float						#Change in absolutism from this privilege
#	
# 	is_valid = { triggers }						#Conditions for whether it is possible for the country to have this privilege displayed 
# 	can_select = { triggers } 					#Conditions for whether the country is allowed to select the privilege
#	
# 	on_granted = { effects } 					#Effects executed immediately upon the privilege being taken
#	on_granted_province = { effects }
# 	can_revoke = { triggers } 					#Conditions for whether the country can revoke the privilege
# 	on_revoked = { effects } 					#Effects executed upon the privilege being revoked by the country
#	on_revoked_province = { effects }
# 	on_invalid = { effects } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
#	on_invalid_province = { effects }
#	
#	benefits = { modifiers }					#Positive modifiers granted while the privilege is active
# 	penalties = { modifiers } 					#Negative modifiers granted while the privilege is active (creates different tooltip to benefits)
# 	conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
# 		trigger = { triggers }
# 		modifier = { modifiers }
# 		is_bad = yes/no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
# 	}
#	loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
#		trigger = { triggers }
#		modifier = { modifiers }
#	}
#	influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
#		trigger = { triggers }
#		modifier = { modifiers }
#	}
# 	modifier_by_land_ownership = { modifiers } 	#Multiplies the modifier by the % of land owned by the estate.
# 	mechanics = { mechanics } 					#Special mechanics the privilege enables
# 	cooldown_years = int 						#Time limit before which the privilege cannot be revoked
# 	on_cooldown_expires = { effects }			#Effect executed once the specified cooldown_years timer has run down
#	ai_will_do									#If above ESTATE_PRIVILEGE_GRANT_THRESHOLD define, AI will apply. If below ESTATE_PRIVILEGE_REVOKE_THRESHOLD, AI will revoke.
# }