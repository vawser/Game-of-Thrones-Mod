# Country
on_startup = {
	# Set Iron Throne holder
	emperor = {
		save_global_event_target_as = IronThroneKing
	}

	# Set YiTi Emperor
	if = {
		limit = { is_emperor_of_china = yes }
		save_global_event_target_as = YiTiEmperor
	}

	# Assigning Age Nation Bonuses
	if = {
		limit = { NOT = { has_global_flag = age_nation_bonuses_applied } }
		set_global_flag = age_nation_bonuses_applied
		if = {
			limit = { current_age = age_of_fire }
			age_of_fire_add_nation_bonus_effect = yes
		}
		else_if = {
			limit = { current_age = age_of_rebellion }
			age_of_rebellion_add_nation_bonus_effect = yes
		}
	}

	# Kingsroad Benefit
	if = {
		limit = { NOT = { has_global_flag = kingsroad_bonuses } }
		set_global_flag = kingsroad_bonuses
		kingsroad = {
			add_province_triggered_modifier = kingsroad_province_bonus
		}
	}

	on_startup_watch_commanders_effect = yes
	on_startup_great_projects_effect = yes
	
	#Sets up Countries
	events = {
		GOT_SYSTEM.1	# Global
		GOT_SYSTEM.2	# Country
		yiti.1			# YiTi startup
	}
}

# Country
on_religion_change = {  
	on_religion_change_estate_privileges_effect = yes
	
	if = {
		limit = {
			government = native
		}
		change_government = monarchy
		add_government_reform = kingdom_reform
	}
	if = {
		limit = {
			has_heir = yes
		}
		set_heir_religion = ROOT
	}
	if = {
		limit = {
			has_regency = no
		}
		set_ruler_religion = ROOT
	}
	if = {
		limit = {
			has_dlc = "Rights of Man"
			has_consort = yes
		}
		set_consort_religion = ROOT
	}
	add_country_modifier = {
		name = recently_changed_religion_dummy
		duration = 10
		hidden = yes
	}
}

# Country
on_secondary_religion_change = {
}

# Country. Spawned when Enforcing Rebel Demands through a Support Rebels-war.
on_enforce_rebel_demands = {
	# ROOT = The winning country
	# FROM = The loosing country
	set_country_flag = helped_rebels_win_war
}

# Country
on_colonial_liberation = {
}

# Country
on_colonial_reintegration = {
}

# Country
on_peace_actor = {
}

# Country
on_peace_recipient = {
}

# Country - ROOT = winning country, FROM = loser country
on_war_won = {
	# Nomad - Gain Unity on war wins
	if = {
		limit = {
			is_nomad = yes
		}
		
		add_horde_unity = 20
	}
	
	events = {
		
	}
	
	random_events = {
		100 = GOT_ACCOMPLISHMENTS.1 # History is written by the victors!
		5000 = 0
	}
}

on_main_war_won = {
}

on_separate_war_won = {
}

# Country - ROOT = loser country, FROM = winner country
on_war_lost = {
	if = {
		limit = {
			government = republic
			is_lesser_in_union = yes
		}
		change_government_to_monarchy = yes
	}
	add_country_modifier = {
		name = just_lost_war_timer
		duration = 10
		hidden = yes
	}
}

on_main_war_lost = {
}

on_separate_war_lost = {
}

# Country - ROOT = winning country, FROM = loser country
on_battle_won_country = {
	# Government: Nomad
	if = {
		limit = {
			is_nomad = yes
			FROM = {
				NOT = { tag = REB }
			}
		}
		
		add_horde_unity = 5
	}
	if = {
		limit = {
			has_government_attribute = battle_victory_clan_cohesion_increase
			has_government_mechanic = clan_cohesion_mechanic
		}
		add_government_power = {
			mechanic_type = clan_cohesion_mechanic
			power_type = clan_cohesion
			value = 0.5
		}
	}
	
	random_events = {
		1000 = GOT_RULER_IMPROVEMENT.1
		1000 = GOT_RULER_IMPROVEMENT.10
		100000 = 0
	}
}

# Country - ROOT = loser country, FROM = winner country
on_battle_lost_country = {
}

# Province - ROOT = location, FROM = loser country
on_battle_won_province = {
}

# Province - ROOT = location, FROM = winner country
on_battle_lost_province = {
	random_events = {
		50 = GOT_WHITE_WALKER.2 
		50 = 0
	}
}

#Unit Scope OnAction for Battle Won
on_battle_won_unit = {
	if = {
		limit = {
			unit_owner = { ai = no } #Scopes to Unit Owner from Unit Scope
			general_with_steam_name = yes #Unit Scope Trigger
		}
		unit_owner = { set_country_flag = general_with_steam_name_won_battle }
	}

    if = { #Orange Yitish Rebellion Fight
        limit = {
			event_target:YiTiEmperor = { has_country_flag = loe_legitimacy_battle }
			is_ruler_commanding_unit = yes
			unit_owner = {
				is_emperor_of_china = yes
			}
        }
		event_target:YiTiEmperor = { country_event = { id = yiti.10 } }
    }
}

#Unit Scope OnAction for Battle Lost
on_battle_lost_unit = {
	if = { #Orange Yitish Rebellion Ruler Fight
        limit = {
			general_with_name = "Pol"
			enemy_unit = {
				unit_owner = {
					is_emperor_of_china = yes
				}
				is_ruler_commanding_unit = yes
			}
        }
		
		if = {
			limit = { 
				event_target:YiTiEmperor = { NOT = { has_country_flag = loe_legitimacy_battle } }
			}
			event_target:YiTiEmperor = {
				country_event = { id = yiti.9 }
				set_country_flag = loe_legitimacy_battle
			}
		}
    }
	if = {
		limit = {
			NOT = { is_year = 197 }
			general_with_name = "Daemon Blackfyre"
			enemy_unit = {
				unit_owner = { tag = CRW }
				is_ruler_commanding_unit = yes
			}
		}
		CRW = {
			set_country_flag = daemon_defeated_flag
			every_owned_province = {
				#limit = { has_rebel_faction = REB }
				clear_rebels = yes
			}
			every_owned_province = {
				limit = { controlled_by = REB }
				change_controller = CRW
			}
			end_disaster = blackfyre_rebellion
			country_event = { id = GOT_BLACKFYRE_REB.100 }
		}
	}
}

# Province - ROOT = location, FROM = country doing it
on_added_to_trade_company = {
}

# Province - ROOT = location, FROM = country doing it
on_removed_from_company = {
}

# Province - ROOT = location, FROM = country doing it
on_company_formed ={
}

# Province - ROOT = location, FROM = country doing it
on_company_disolved = {
}

# Country - ROOT = winning country, FROM = location
on_siege_won_country = {
	# Iron Throne claim
	if = {
		limit = {
			NOT = { tag = REB }
			is_in_war = { casus_belli = cb_seize_the_iron_throne attacker_leader = ROOT }
			FROM = { province_id = 226 }
		}
		country_event = { id = sk_event.110 } # "Claim the Iron Throne"
	}
	random_events = {
		25 = GOT_ACCOMPLISHMENTS.3	  # Strategic Excellence
		25 = GOT_ARMY_PROFESSIONALISM.1 # City Sacked
		1000 = 0
	}
}

# Country - ROOT = losing country, FROM = location
on_siege_lost_country = {
}

# Province - ROOT = location, FROM = losing country
on_siege_won_province = {
}

# Province - ROOT = location, FROM = winning country
on_siege_lost_province =  {
	events = {
		GOT_WHITE_WALKER.3
	}
}

# province
# root = location, from = country that abandons colony
# Fired right before the colony is abandoned.
on_abandon_colony = {
}

# province
# root = location, from = country that owns it
# Fired right after the great project is constructed
on_great_project_constructed = {
}

# Country
on_new_monarch = {
	if = {
		limit = {
			has_consort_regency = no
			any_owned_province = {
				has_province_modifier = domain_of_spouses_family
			}
		}
		random_owned_province = {
			limit = { has_province_modifier = domain_of_spouses_family }
			remove_province_modifier = domain_of_spouses_family
		}
	}
	if = {
		limit = {
			has_consort_regency = no
			any_owned_province = {
				has_province_modifier = home_of_consort
			}
		}
		random_owned_province = {
			limit = { has_province_modifier = home_of_consort }
			remove_province_modifier = home_of_consort
		}
	}
	
	if = {
		limit = {
			OR = {
				tag = CRW
				tag = WST
			}
			is_emperor = yes
		}
		add_king_titles = yes
	}

	if = {
		limit = {
			has_government_attribute = empower_wildling_faction_on_death
		}
		country_event = {
			id = tribalgov.1
		}
	}

	if = {
		limit = {
			has_government_attribute = has_limited_terms
		}
		set_variable = {
			which = election_term
			value = 1
		}
	}

	succession_culture_religion_effect = yes
	
	events = {
		GOT_DOTHRAKI.1
		GOT_DAENERYS.100
		GOT_DYNASTIC.21
		sk_event.100
	}
}

# Country 
on_new_consort = {
	if = {
		limit = { has_ruler_flag = had_10_years_anniversary }
		clr_ruler_flag = had_10_years_anniversary
	}
	if = {
		limit = { has_ruler_flag = had_20_years_anniversary }
		clr_ruler_flag = had_20_years_anniversary
	}
	if = {
		limit = { has_ruler_flag = consort_had_affection_of_ruler }
		clr_ruler_flag = consort_had_affection_of_ruler
	}
	if = {
		limit = { has_country_modifier = sought_after_bachelor }
		remove_country_modifier = sought_after_bachelor
	}

	events = {
		GOT_CONSORT.2
	}
}

# Country 
on_monarch_death = {
	if = {
		limit = { has_country_modifier = sought_after_bachelor }
		remove_country_modifier = sought_after_bachelor
	}

	# In case of death of current council member, this will clear
	# all flags and event targets as well as ruler modifiers
	clear_council_country = yes
	##LOE Changes##
	if = {
		limit = {
			has_government_attribute = loe_increased_stab_on_death
		}
		add_stability = -1
	}
	if = {
		limit = {
			has_government_attribute = loe_increased_stab_on_death_plus
		}
		add_stability = -1
	}
	events = {
		##LOE Changes##
		jogosnhai.4
	}
}

# Country
on_regent = {
	events = {
		GOT_DOTHRAKI.1	  # Dothraki Succession
		GOT_DAENERYS.100
	}
}

# country
on_extend_regency = {
	add_legitimacy = -10
}


# Country
on_new_term_election = {
	events = {
		elections.100   # On Term Election
		elections.103	# Sortion Election
		GOT_VOLANTIS.2	  # On Term Election for Volantis
		elections.200  # States General On Term Election
	}
}

# Country
on_death_election = {
	if = {
		limit = { has_reform = republican_dictatorship_reform }
		define_ruler = {
			name = "(Dictator's Council)"
			regency = yes
			adm = 1
			dip = 1
			mil = 1
		}
		if = {
			limit = {
				tag = U25
			}
			add_government_reform = braavos_city_reform
		}
		else_if = {
			limit = {
				tag = U12
			}
			add_government_reform = pentos_city_reform
		}
		else = {
			remove_government_reform = republican_dictatorship_reform
		}
	}
	
	events = {
		elections.101   # On Death Election
		elections.103	# Sortion Election
		GOT_VOLANTIS.1	  # On Death Election for Volantis
		elections.201   # States General On Death Election
	}
}

# country
on_death_foreign_slave_ruler = {
	
}

# Country
on_replace_governor = {
	events = {
		elections.102	# On Replace Governor
	}
}

# Country
on_bankruptcy = {
	events = {
		GOT_SUBJECTS.2
	}
}

# Country - ROOT = annexing country, FROM = annexed country
on_diplomatic_annex = {
	events = {
		GOT_SUBJECTS.100 
		GOT_SUBJECTS.1
	}
	
	random_events = {
		1000 = GOT_RULER_IMPROVEMENT.2
		1000 = GOT_RULER_IMPROVEMENT.11
		10000 = 0
	}
}

# Country
on_heir_death = {
	if = {
		limit = { has_country_flag = heir_dip_education }
		clr_country_flag = heir_dip_education
	}
	if = {
		limit = { has_country_flag = heir_mil_education }
		clr_country_flag = heir_mil_education
	}
	if = {
		limit = { has_country_flag = heir_adm_education }
		clr_country_flag = heir_adm_education
	}
	if = {
		limit = { has_ruler_flag = well_advised_tutored_heir }
		clr_ruler_flag = well_advised_tutored_heir
	}
	if = {
		limit = { has_ruler_flag = heir_went_on_grand_tour }
		clr_ruler_flag = heir_went_on_grand_tour
	}
	#on_heir_disinherited_or_death_effect = yes
}

# Country
on_queen_death = {
	if = {
		limit = { has_consort_flag = 10_years_anniversary }
		set_ruler_flag = had_10_years_anniversary
	}
	if = {
		limit = { has_consort_flag = 20_years_anniversary }
		set_ruler_flag = had_20_years_anniversary
	}
	if = {
		limit = { has_consort_flag = consort_has_affection_of_ruler }
		set_ruler_flag = consort_had_affection_of_ruler
	}

	if = {
		limit = {
			has_regency = no
			NOT = { has_ruler_flag = widow_widower }
		}
		set_ruler_flag = widow_widower
	}
	if = {
		limit = { has_consort_regency = no }
		random_owned_province = {
			limit = { has_province_modifier = domain_of_spouses_family }
			remove_province_modifier = domain_of_spouses_family
		}
	}
	if = {
		limit = { has_ruler_flag = accepted_help_from_spouses_family }
		clr_ruler_flag = accepted_help_from_spouses_family
	}
	if = {
		limit = { has_ruler_flag = helped_spouses_family }
		clr_ruler_flag = helped_spouses_family
	}
	if = {
		limit = { has_ruler_flag = refused_to_help_spouses_family }
		clr_ruler_flag = refused_to_help_spouses_family
	}
	if = {
		limit = { has_ruler_flag = has_lowborn_consort }
		random_owned_province = {
			limit = { has_province_modifier = home_of_consort }
			remove_province_modifier = home_of_consort
		}
	}
	if = {
		limit = { has_ruler_flag = has_lowborn_consort }
		clr_ruler_flag = has_lowborn_consort
	}
	if = {
		limit = { has_country_modifier = consort_adm_advice }
		remove_country_modifier = consort_adm_advice
	}
	if = {
		limit = { has_country_modifier = consort_dip_advice }
		remove_country_modifier = consort_dip_advice
	}
	if = {
		limit = { has_country_modifier = consort_mil_advice }
		remove_country_modifier = consort_mil_advice
	}
	if = {
		limit = { has_country_modifier = without_spouse_advice }
		remove_country_modifier = without_spouse_advice
	}
	if = {
		limit = { has_ruler_modifier = affectionate_royal_couple }
		remove_country_modifier = affectionate_royal_couple
	}
	clr_ruler_flag = marriage_length
}

# Country
on_new_heir = {
	events = {
		sk_event.101
	}
}

# Country
on_weak_heir_claim = {
	events = {
		GOT_PRETENDER.1 # Successor Claim
	}
}

# Country
on_heir_needed_theocracy = {
	events = {
		GOT_THEOCRACY.1
	}
}

# Country
on_successive_emperor = {
	emperor = {
		save_global_event_target_as = IronThroneKing
	}
}

# Country
on_emperor_elected = {
	emperor = {
		save_global_event_target_as = IronThroneKing
	}

	every_elector = {
		if = {
			limit = {
				preferred_emperor = root
			}
			change_variable = {
				which = supported_successive_kings
				value = 1
			}
		}
		else = {
			set_variable = {
				which = supported_successive_kings
				value = 0
			}
		}
	}
}

# Country
on_released_hre_member = {
	emperor = {
		add_imperial_influence = 10
	}
}

# Country
on_hre_member_false_religion = {
}

# Country
on_hre_member_true_religion = {
}

# Country
on_hre_wins_defensive_war = {
	emperor = {
		add_imperial_influence = 10
	}
}

# Country
on_hre_member_annexed = {
	emperor = {
		add_imperial_influence = -10
	}
}

# Country
on_hre_released_vassal = {
}

# Country
on_hre_transfered_vassal = {
}

# Country
on_hre_defense = {
	emperor = {
		add_imperial_influence = 5
	}
}

# Country
on_hre_non_defense = {
	emperor = {
		add_imperial_influence = -10
	}
}

# Province
on_hre_province_reconquest = {
}

# Country
on_lock_hre_religion = {
}

# Country
on_change_hre_religion = {
}

# Country
on_hre_religion_white_peace = {
}

# Country
on_government_change = {
	if = {
		limit = {
			NOT = { government = monarchy }
			NOT = { government = occult }
			NOT = { government = mythical }
			any_owned_province = {
				has_province_modifier = domain_of_spouses_family
			}
		}
		random_owned_province = {
			limit = { has_province_modifier = domain_of_spouses_family }
			remove_province_modifier = domain_of_spouses_family
		}
	}
	if = {
		limit = {
			NOT = { government = monarchy }
			NOT = { government = occult }
			NOT = { government = mythical }
			any_owned_province = {
				has_province_modifier = home_of_consort
			}
		}
		random_owned_province = {
			limit = { has_province_modifier = home_of_consort }
			remove_province_modifier = home_of_consort
		}
	}
}

# Country
on_native_change_government = {
}

# Country - ROOT = annexing country, FROM = annexed country
on_integrate = {
	events = {
		GOT_INTEGRATION.1
	}
}

# Country - ROOT = annexing country, FROM = annexed country
on_annexed = {
	on_annexed_estate_privileges_effect = yes
}

# Country - ROOT = current country, FROM = emperor
on_chinese_empire_dismantled = {
	clear_global_event_target = YiTiEmperor
}


# Country - ROOT = old emperor, FROM = new emperor
on_mandate_of_heaven_gained = {
	if = {
		limit = {
			is_emperor_of_china = yes
		}
		save_global_event_target_as = YiTiEmperor
	}
	
	# add_government_reform = royal_house_reform
	set_mandate = 60
	set_meritocracy = 60
	# westeros_superregion = {
	# 	limit = {
	# 		NOT = { is_core = ROOT }
	# 	}
	# 	add_permanent_claim = ROOT
	# }
	if = {
		limit = {
			has_country_modifier = lost_mandate_of_heaven
		}
		remove_country_modifier = lost_mandate_of_heaven
	}
}

# Country - ROOT = old emperor, FROM = new emperor
on_mandate_of_heaven_lost = {
	# remove_government_reform = royal_house_reform
	# add_government_reform = noble_house_reform
	# set_government_rank = 2
	
	add_country_modifier = {
		name = lost_mandate_of_heaven
		duration = 7300
	}
	
	add_stability = -2
	# westeros_superregion = {
	# 	limit = {
	# 		is_permanent_claim = ROOT
	# 	}
	# 	remove_claim = ROOT
	# }
}

on_embrace_revolution = {
}

on_dismantle_revolution = {
}

# Province
on_adm_development = {
	random_events = {
		1000 = GOT_RULER_IMPROVEMENT.3
		1000 = GOT_RULER_IMPROVEMENT.12
		100000 = 0
	}
}

# Province
on_dip_development = {
	random_events = {
		1000 = GOT_RULER_IMPROVEMENT.5
		1000 = GOT_RULER_IMPROVEMENT.14
		100000 = 0
	}
}

# Province
on_mil_development = {  
	random_events = {
		1000 = GOT_RULER_IMPROVEMENT.6
		1000 = GOT_RULER_IMPROVEMENT.15
		100000 = 0
	}
}

# Country
on_overextension_pulse = {
	random_events = {
		100 = GOT_OVEREXTENSION.1
		100 = GOT_OVEREXTENSION.2
		100 = GOT_OVEREXTENSION.3
		100 = GOT_OVEREXTENSION.4
		100 = GOT_OVEREXTENSION.5
		100 = GOT_OVEREXTENSION.6
		100 = GOT_OVEREXTENSION.7
		100 = GOT_OVEREXTENSION.8
		100 = GOT_OVEREXTENSION.9
		100 = GOT_OVEREXTENSION.10
	}
}

# Country
on_colonial_pulse = {
	random_events = {
		100 = GOT_COLONIAL.1
		100 = GOT_COLONIAL.2
		100 = GOT_COLONIAL.3
		100 = GOT_COLONIAL.4
		100 = GOT_COLONIAL.5
		100 = GOT_COLONIAL.6
		100 = GOT_COLONIAL.7
		100 = GOT_COLONIAL.8
		10000 = 0
	}
}

# Country
on_siberian_pulse = {
}

# country random events
on_monthly_pulse = {
	if = {
		limit = { NGT = { has_no_watch_commander = { castle = shadowtower } } castle_not_abandoned = { province_id = 16 } }
		NGT = { set_watch_commander = { castle = shadowtower option = 0 } }
	}
	if = {
		limit = { NGT = { has_no_watch_commander = { castle = nightfort } } castle_not_abandoned = { province_id = 1580 } }
		NGT = { set_watch_commander = { castle = nightfort option = 1 } }
	}
	if = {
		limit = { NGT = { has_no_watch_commander = { castle = woodswatch } } castle_not_abandoned = { province_id = 1584 } }
		NGT = { set_watch_commander = { castle = woodswatch option = 2 } }
	}
	if = {
		limit = { NGT = { has_no_watch_commander = { castle = eastwatch } } castle_not_abandoned = { province_id = 18 } }
		NGT = { set_watch_commander = { castle = eastwatch option = 3 } }
	}
}

on_yearly_pulse = {
}
on_yearly_pulse_2 = {
	# 50% chance of firing a bandit event yearly
	random = {
		chance = 50
		on_yearly_pulse_bandits_events_effect = yes
	}
}
on_yearly_pulse_3 = {
}
on_yearly_pulse_4 = {
}
on_yearly_pulse_5 = {
}

# Country
on_bi_yearly_pulse = {
	# Cleanup Iron Throne holder change
	clr_country_flag = iron_throne_transition
	
	random_events = {
		100 = GOT_CULTURAL_UPRISING.1
		
		100 = GOT_CORRUPTION.16
		100 = GOT_CORRUPTION.17
		100 = GOT_CORRUPTION.18
		100 = GOT_CORRUPTION.19
		100 = GOT_CORRUPTION.20
		
		125 = GOT_CULTURE_RELIGION.1
		125 = GOT_CULTURE_RELIGION.3
		125 = GOT_CULTURE_RELIGION.4
		125 = GOT_CULTURE_RELIGION.5
		125 = GOT_CULTURE_RELIGION.6
		125 = GOT_CULTURE_RELIGION.7
		125 = GOT_CULTURE_RELIGION.8
		125 = GOT_CULTURE_RELIGION.9
		125 = GOT_CULTURE_RELIGION.10
		125 = GOT_CULTURE_RELIGION.11
		125 = GOT_CULTURE_RELIGION.12
		125 = GOT_CULTURE_RELIGION.13
		125 = GOT_CULTURE_RELIGION.14
		125 = GOT_CULTURE_RELIGION.15
		125 = GOT_CULTURE_RELIGION.16
		100 = GOT_CULTURE_RELIGION.17
		125 = GOT_CULTURE_RELIGION.18
		125 = GOT_CULTURE_RELIGION.19
		125 = GOT_CULTURE_RELIGION.20
		175 = GOT_CULTURE_RELIGION.21
		125 = GOT_CULTURE_RELIGION.22
		125 = GOT_CULTURE_RELIGION.23
		
		# Espionage
		100 = GOT_ESPIONAGE.1
		100 = GOT_ESPIONAGE.4
		40  = GOT_ESPIONAGE.6
		100 = GOT_ESPIONAGE.8
		80  = GOT_ESPIONAGE.9
		
		# Professionalism
		100 = GOT_ARMY_PROFESSIONALISM.4
		100 = GOT_ARMY_PROFESSIONALISM.5
		75  = GOT_ARMY_PROFESSIONALISM.6
		100 = GOT_ARMY_PROFESSIONALISM.8
		100 = GOT_ARMY_PROFESSIONALISM.9
		100 = GOT_ARMY_PROFESSIONALISM.10
		100 = GOT_ARMY_PROFESSIONALISM.11
		75  = GOT_ARMY_PROFESSIONALISM.12
		100 = GOT_ARMY_PROFESSIONALISM.13
		75  = GOT_ARMY_PROFESSIONALISM.16
		
		# Agenda from the Estates
		1000 = GOT_ESTATE_SYSTEM.1
		
		2000 = 0
	}
}

# Country
on_bi_yearly_pulse_2 = {
	random_events = {
		100 = GOT_CORRUPTION.1
		100 = GOT_CORRUPTION.2
		100 = GOT_CORRUPTION.3
		100 = GOT_CORRUPTION.4
		100 = GOT_CORRUPTION.5
		100 = GOT_CORRUPTION.6
		100 = GOT_CORRUPTION.7
		100 = GOT_CORRUPTION.8
		100 = GOT_CORRUPTION.9
		100 = GOT_CORRUPTION.10
		200 = GOT_CORRUPTION.11
		200 = GOT_CORRUPTION.12
		200 = GOT_CORRUPTION.13
		200 = GOT_CORRUPTION.14
		200 = GOT_CORRUPTION.15
		
		100 = GOT_QARTH.1
		100 = GOT_QARTH.2
		100 = GOT_QARTH.3
		100 = GOT_QARTH.4 
		100 = GOT_QARTH.5 
		100 = GOT_QARTH.7 
		100 = GOT_QARTH.8 
		100 = GOT_QARTH.9
		
		500 = GOT_SLAVERY.1
		500 = GOT_SLAVERY.2
		100 = GOT_SLAVERY.3
		
		10000 = 0
	}
}

# Country
on_bi_yearly_pulse_3 = {
	random_events = {
		10 = GOT_ACCOMPLISHMENTS.6 # Grand Army
		10 = GOT_ACCOMPLISHMENTS.7 # Colonial Vigor
		10 = GOT_ACCOMPLISHMENTS.8 # Treasures of Exploration
		10 = GOT_ACCOMPLISHMENTS.9 # Peaceful Realm
		10 = GOT_ACCOMPLISHMENTS.10 # One Faith
		10 = GOT_ACCOMPLISHMENTS.11 # Royal Network
		10 = GOT_ACCOMPLISHMENTS.12 # Marcher Lords
		10 = GOT_ACCOMPLISHMENTS.13 # Lord of Many
		10 = GOT_ACCOMPLISHMENTS.14 # Bleed Them Dry
		10 = GOT_ACCOMPLISHMENTS.15 # Prestigeous Realm
		10 = GOT_ACCOMPLISHMENTS.16 # Grand Fleet
		10 = GOT_ACCOMPLISHMENTS.17 # Strategic Blockades
		
		100 = GOT_RELIGION.1
		100 = GOT_RELIGION.2
		100 = GOT_RELIGION.3
		100 = GOT_RELIGION.4
		100 = GOT_RELIGION.5
		100 = GOT_RELIGION.6 
		100 = GOT_RELIGION.7
		100 = GOT_RELIGION.8
		100 = GOT_RELIGION.11
		100 = GOT_RELIGION.12
		
		8000 = 0
	}
}

# Country
on_bi_yearly_pulse_4 = {
}

# Country
on_bi_yearly_pulse_5 = {
}

# Country
on_thri_yearly_pulse = {
	random_events = {
		100 = GOT_DEVOTION.1
		100 = GOT_DEVOTION.2
		100 = GOT_DEVOTION.3
		100 = GOT_DEVOTION.4
		100 = GOT_DEVOTION.5
		100 = GOT_DEVOTION.7
		100 = GOT_DEVOTION.8
		100 = GOT_DEVOTION.9
		100 = GOT_DEVOTION.10
		100 = GOT_DEVOTION.11
		100 = GOT_DEVOTION.12
		100 = GOT_DEVOTION.13
		100 = GOT_DEVOTION.14
		100 = GOT_DEVOTION.15
		100 = GOT_DEVOTION.16
		100 = GOT_DEVOTION.18
		100 = GOT_DEVOTION.19
		100 = GOT_DEVOTION.22
		100 = GOT_DEVOTION.23
		100 = GOT_DEVOTION.24
		50 = GOT_SK_RANDOM.11
		25 = GOT_SK_RANDOM.12
		25 = GOT_SK_RANDOM.24
		
		3000 = 0
	}
}

# Country
on_thri_yearly_pulse_2 = {
	random_events = {
		# Dragon Eggs
		100 = GOT_DRAGON_EGGS.2
		100 = GOT_DRAGON_EGGS.3
		100 = GOT_DRAGON_EGGS.4
		100 = GOT_DRAGON_EGGS.5
		100 = GOT_DRAGON_EGGS.6
		100 = GOT_DRAGON_EGGS.7
		100 = GOT_DRAGON_EGGS.10
		
		3000 = 0
	}
}

# Country
on_thri_yearly_pulse_3 = {
}

# Country
on_thri_yearly_pulse_4 = {
	random_events = {
		10 = GOT_SK_RANDOM.45
		10 = GOT_SK_RANDOM.46
		50 = GOT_SK_RANDOM.47
		10 = GOT_SK_RANDOM.48
		10 = GOT_SK_RANDOM.49
		10 = GOT_SK_RANDOM.50
		50 = GOT_SK_RANDOM.51
		10 = GOT_SK_RANDOM.52
		10 = GOT_SK_RANDOM.53
		50 = GOT_SK_RANDOM.54
		10 = GOT_SK_RANDOM.56
		75 = GOT_SK_RANDOM.57
		50 = GOT_SK_RANDOM.58
		10 = GOT_SK_RANDOM.59
		50 = GOT_SK_RANDOM.60
	}
}

# Country
on_four_year_pulse = {
	random_events = {
		100 = GOT_RANDOM_COUNTRY.1 # Envoy falls Ill
		100 = GOT_RANDOM_COUNTRY.2 # Insulted by a Maester
		100 = GOT_RANDOM_COUNTRY.3 # Exotic Trader
		100 = GOT_RANDOM_COUNTRY.4 # A Grand Feast!
		100 = GOT_RANDOM_COUNTRY.5 # Tales FROM beyond the Wall
		100 = GOT_RANDOM_COUNTRY.6 # Infighting
		100 = GOT_RANDOM_COUNTRY.7 # Essosian Traders
		100 = GOT_RANDOM_COUNTRY.8 # Westerosi Traders
		100 = GOT_RANDOM_COUNTRY.9 # Barrow of the First Men
		100 = GOT_RANDOM_COUNTRY.10 # Visit FROM a Spice Trader
		100 = GOT_RANDOM_COUNTRY.11 # Repair the Titan
		100 = GOT_RANDOM_COUNTRY.12 # Commoner's Request
		100 = GOT_RANDOM_COUNTRY.13 # Popular Hedge Wizard
		100 = GOT_RANDOM_COUNTRY.14 # Out of Myrish Fire
		100 = GOT_RANDOM_COUNTRY.15 # $HEIR$ is a lizard!
		100 = GOT_RANDOM_COUNTRY.16 # Fever in court
		100 = GOT_RANDOM_COUNTRY.17 # A Red Comet
		100 = GOT_RANDOM_COUNTRY.18 # Sighting of a Wanderer
		100 = GOT_RANDOM_COUNTRY.19 # Sighting of the Red Wanderer
		100 = GOT_RANDOM_COUNTRY.20 # Child of the Forest sighted!
		100 = GOT_RANDOM_COUNTRY.21 # Crannogmen disappearances
		100 = GOT_RANDOM_COUNTRY.22 # Summer Merchant
		100 = GOT_RANDOM_COUNTRY.23 # Westerosi Merchant
		100 = GOT_RANDOM_COUNTRY.24 # Grand Tournament
		100 = GOT_RANDOM_COUNTRY.25 # [Root.Heir.GetName] adores whores!
		100 = GOT_RANDOM_COUNTRY.26 # War calls!
		
		100 = GOT_CULTURAL.1 # Deserters from the Wall
		100 = GOT_CULTURAL.2 # Mountain Clan Turmoil
		100 = GOT_CULTURAL.3 # The Old Way
		100 = GOT_CULTURAL.4 # A Silken Lover...
		
		100 = GOT_MERCANTILISM.1
		
		10000 = 0
	}
}

# Country
on_four_year_pulse_2 = {
	random_events = {
		#Empire of China
		100 = GOT_SK_RANDOM.1
		100 = GOT_SK_RANDOM.2
		100 = GOT_SK_RANDOM.3
		100 = GOT_SK_RANDOM.4
		75 = GOT_SK_RANDOM.5
		100 = GOT_SK_RANDOM.6
		100 = GOT_SK_RANDOM.7
		100 = GOT_SK_RANDOM.8
		100 = GOT_SK_RANDOM.9
		100 = GOT_SK_RANDOM.10
		100 = GOT_SK_RANDOM.11
		100 = GOT_SK_RANDOM.12
		100 = GOT_SK_RANDOM.13
		100 = GOT_SK_RANDOM.14
		100 = GOT_SK_RANDOM.15
		100 = GOT_SK_RANDOM.16
		100 = GOT_SK_RANDOM.17
		100 = GOT_SK_RANDOM.18
		100 = GOT_SK_RANDOM.19
		100 = GOT_SK_RANDOM.20
		100 = GOT_SK_RANDOM.21
		100 = GOT_SK_RANDOM.22
		100 = GOT_SK_RANDOM.23
		100 = GOT_SK_RANDOM.24
		100 = GOT_SK_RANDOM.25
		100 = GOT_SK_RANDOM.26
		100 = GOT_SK_RANDOM.27
		100 = GOT_SK_RANDOM.28
		100 = GOT_SK_RANDOM.29
		100 = GOT_SK_RANDOM.30
		100 = GOT_SK_RANDOM.35
		100 = GOT_SK_RANDOM.36
		100 = GOT_SK_RANDOM.39
		
		3000 = 0
	}
}

# Country
on_four_year_pulse_3 = {
}

# Country
on_four_year_pulse_4 = {
}

# Country
on_five_year_pulse = {
	random_events = {
		100 = GOT_FAITH_OF_THE_SEVEN.2 # A warrior demands representation!
		100 = GOT_FAITH_OF_THE_SEVEN.4 # Our Faith Rewarded!
		100 = GOT_FAITH_OF_THE_SEVEN.5 # Hand of the Father
		100 = GOT_FAITH_OF_THE_SEVEN.6 # Embrace of the Mother
		100 = GOT_FAITH_OF_THE_SEVEN.7 # Fury of the Warrior
		100 = GOT_FAITH_OF_THE_SEVEN.8 # Purity of the Maiden
		100 = GOT_FAITH_OF_THE_SEVEN.9 # Hammer of the Smith
		100 = GOT_FAITH_OF_THE_SEVEN.10 # Whispers of the Crone
		100 = GOT_FAITH_OF_THE_SEVEN.11 # Presence of the Stranger
		100 = GOT_FAITH_OF_THE_SEVEN.12 # The Song of the Seven
		
		500 = GOT_NIGHTS_WATCH.1		# The Night's Watch demands men!
		500 = GOT_ACCOMPLISHMENTS.18	# A Noble Fool
		500 = GOT_VOLANTIS.10		   # A Volantene Honor
		
		200 = GOT_ABSOLUTISM.1
		200 = GOT_ABSOLUTISM.2
		200 = GOT_ABSOLUTISM.3
		
		10000 = 0
	}
}

# Country
on_five_year_pulse_2 = {
}

# Country
on_five_year_pulse_3 = {
}

# Country
on_five_year_pulse_4 = {
	# Tradegoods
	random_events = {
		10 = GOT_PRICE_INCREASE.1 
		10 = GOT_PRICE_INCREASE.2
		10 = GOT_PRICE_INCREASE.3 
		10 = GOT_PRICE_INCREASE.4 
		10 = GOT_PRICE_INCREASE.5 
		10 = GOT_PRICE_INCREASE.6 
		10 = GOT_PRICE_INCREASE.7 
		10 = GOT_PRICE_INCREASE.8 
		10 = GOT_PRICE_INCREASE.9 
		10 = GOT_PRICE_INCREASE.10 
		10 = GOT_PRICE_INCREASE.11
		10 = GOT_PRICE_INCREASE.12
		10 = GOT_PRICE_INCREASE.13
		10 = GOT_PRICE_INCREASE.14
		10 = GOT_PRICE_INCREASE.15
		10 = GOT_PRICE_INCREASE.16
		10 = GOT_PRICE_INCREASE.17
		10 = GOT_PRICE_INCREASE.18
		10 = GOT_PRICE_INCREASE.19
		10 = GOT_PRICE_INCREASE.20
		10 = GOT_PRICE_INCREASE.21
		10 = GOT_PRICE_INCREASE.22
		10 = GOT_PRICE_INCREASE.23
		10 = GOT_PRICE_INCREASE.25
		
		10 = GOT_PRICE_DECREASE.1 
		10 = GOT_PRICE_DECREASE.2
		10 = GOT_PRICE_DECREASE.3 
		10 = GOT_PRICE_DECREASE.4 
		10 = GOT_PRICE_DECREASE.5 
		10 = GOT_PRICE_DECREASE.6 
		10 = GOT_PRICE_DECREASE.7 
		10 = GOT_PRICE_DECREASE.8 
		10 = GOT_PRICE_DECREASE.9 
		10 = GOT_PRICE_DECREASE.10 
		10 = GOT_PRICE_DECREASE.11
		10 = GOT_PRICE_DECREASE.12
		10 = GOT_PRICE_DECREASE.13
		10 = GOT_PRICE_DECREASE.14
		10 = GOT_PRICE_DECREASE.15
		10 = GOT_PRICE_DECREASE.16
		10 = GOT_PRICE_DECREASE.17
		10 = GOT_PRICE_DECREASE.18
		10 = GOT_PRICE_DECREASE.19
		10 = GOT_PRICE_DECREASE.20
		10 = GOT_PRICE_DECREASE.21
		10 = GOT_PRICE_DECREASE.22
		10 = GOT_PRICE_DECREASE.23
		10 = GOT_PRICE_DECREASE.25
		
		1000 = 0
	}
}

# Province
on_explore_coast = {
	random_events = {
		100 = GOT_EXPLORATION.9 # Corsairs!
		100 = GOT_ACCOMPLISHMENTS.4 # Coastal Surveying
		10000 = 0
	}
}

# Province
on_conquistador_empty = {
	events = {
		GOT_EXPLORATION.1 # Treasures of Tochtzal
		GOT_EXPLORATION.2 # Ruins of Yeen
	}
	
	random_events = {
		100 = GOT_EXPLORATION.3 # Brindled Men!
		100 = GOT_EXPLORATION.4 # Stinging Flies in $PROVINCENAME$
		100 = GOT_EXPLORATION.5 # Crocodiles in $PROVINCENAME$
		100 = GOT_EXPLORATION.6 # Basilisks in $PROVINCENAME$
		100 = GOT_EXPLORATION.7 # Mysterious Idol
		100 = GOT_EXPLORATION.8 # Wyverns!
		100 = GOT_ACCOMPLISHMENTS.3 # Explorer's Intution
		10000 = 0
	}
}

# Province
on_conquistador_native = {
}

# Country
on_buy_religious_reform = {
}

# Country
on_circumnavigation = {
	events = {
		GOT_EXPLORATION.10 # The First Circumnavigation
		GOT_EXPLORATION.11 # Circumnavigation
	}
}

# Country
on_become_free_city = {
	events = {
		royal_cities.1
	}
}

# Country
on_remove_free_city = {
	events = {
		royal_cities.2
	}
}

on_revoke_estate_land_ai = {
	add_province_modifier = {
		name = revoked_estate_modifier
		duration = 5475 #15 years
	}
}

on_revoke_estate_land = {
	add_province_modifier = {
		name = revoked_estate_modifier
		duration = 5475 #15 years
	}
}

on_revoke_estate_land_ai_post = {
	add_local_autonomy = 25
}

on_revoke_estate_land_post = {
	add_local_autonomy = 25
}

on_grant_estate_land = {
	if = {
		limit = { has_province_modifier = revoked_estate_modifier }
		remove_province_modifier = revoked_estate_modifier
	}
}

# Country
on_death_has_harem = {
}

# Country
on_select_heir_from_harem = {
}

# Country
on_fetishist_cult_change = {
}

# Country
on_gain_great_power_status = {
	if = {
		limit = {
			NOT = { has_country_flag = became_great_power_flag }
		}
		set_country_flag = became_great_power_flag
	}
}

# Country
on_lose_great_power_status = {
}

# Province
on_province_religion_converted = {
	on_province_religion_converted_estate_privileges_effect = yes
}

on_province_religion_changed = {
	#on_province_religion_changed_effect = yes
}

# province, manually conversion
on_province_culture_converted = {
	random_events = {
		1000 = GOT_RULER_IMPROVEMENT.4
		1000 = GOT_RULER_IMPROVEMENT.13
		100000 = 0
	}
}

# province, general conversion through effects
on_province_culture_changed = {
}

# THIS = Province, FROM = Country who Propogated
on_convert_by_trade_policy = {
}

# root = province, from = old owner
on_province_owner_change = {
	on_province_owner_change_estate_privileges_effect = yes
	on_province_owner_change_update_goods_production = yes
	on_province_owner_change_government_effect = yes
}

# Country
on_parliament_debate_failed = {
}

# country
on_parliament_debate_reset = {
}

#province
on_parliament_seat_given = {
}

#province
on_parliament_seat_lost = {
}

# country
on_parliament_debate_failed = {
}

# country
on_parliament_debate_succeeded = {
	increase_issue_passed_counter = yes
}

# country
on_harmonized_pagan = {
}

on_harmonized_christian = {
}

on_harmonized_muslim = {
}

on_harmonized_jewish_group = {
}

on_harmonized_zoroastrian_group = {
}

on_harmonized_dharmic = {
}

on_harmonized_mahayana = {
}

on_harmonized_buddhism = { #Theravada
}

on_harmonized_shinto = {
}

on_harmonized_vajrayana = {
}

# province
on_consecrate_patriarch = {
}

# Country. from = overlord
on_accept_tribute = {
}

# Country. from = overlord
on_refuse_tribute = {
}

# Country
on_leader_recruited = { 
}

# Country
on_general_recruited = {
	add_army_professionalism = 0.01
}

# Country
on_admiral_recruited = {
}

# Country
on_conquistador_recruited = {
}

# Country
on_explorer_recruited = {
}

# Province - ROOT = Province, FROM = Country
on_regiment_recruited = {
	if = {
		limit = {
			FROM = { has_government_attribute = new_regiments_boost_loyalty }
		}
		FROM = {
			add_estate_loyalty = {
				estate = estate_nobles
				loyalty = 1
			}
		}
	}
}

# Province - ROOT = Province, FROM = Country
on_mercenary_recruited = {
	FROM = {
		add_army_professionalism = -0.02
	}
}

# Province - ROOT = One province in the state
on_add_pasha = {
}

# Province - ROOT = One province in the state
on_remove_pasha = {
	# hidden_effect = {
	# 	owner = {
	# 		save_event_target_as = province_owner
	# 	}
	# 	remove_province_modifier = pasha_removed_modifier
	# }

	# area = {
	# 	limit = { owned_by = event_target:province_owner }
	# 	add_or_extend_province_modifier_effect = { MODIFIER = pasha_removed_modifier DURATION = 3650 }
	# }
}

# Province 
on_janissaries_raised = {
}

# Province, THIS = Province
on_cawa_raised = {
}

# Province
on_carolean_raised = {
}

# Province
on_hussars_raised = {
}

# Province
on_revolutionary_guard_raised = {
}

on_banner_raised = {
	owner = { 
		if = { 
			limit = { has_country_flag = refund_partial_corruption_on_banner_recruited_flag }
			add_corruption = -0.1
		}
	}
}

on_cossack_raised = {
}

on_marine_raised = {
}

on_rajput_raised = {
}

on_streltsy_raised = {
}

on_tercio_raised = {
}

on_musketeer_raised = {
}

on_samurai_raised = {
}

on_qizilbash_raised = {
}

on_mamluks_raised = {
}

on_geobukseon_raised = {
}

on_man_of_war_raised = {
}

on_galleon_raised = {
}

on_galleass_raised = {
}

on_caravel_raised = {
}

on_voc_indiamen_raised = {
}

on_hre_reform_passed = {
}

on_mandate_reform_passed = {
	if = {
		limit = { has_country_flag = mng_shengshi_reward_flag }
		add_estate_loyalty = {
			estate = estate_nobles 
			loyalty = 10 
		}
		add_estate_loyalty = {
			estate = estate_merchants
			loyalty = 10 
		}
		add_estate_loyalty = {
			estate = estate_church
			loyalty = 10 
		}
		add_estate_loyalty = {
			estate = estate_tribes
			loyalty = 10 
		}
	}
}

# Country
on_reform_enacted = {
}

# Country
on_reform_changed = {
}

# Province
on_trade_company_investment = {
}

# Province
on_center_of_trade_upgrade = {
}

# Province
on_center_of_trade_downgrade = {
}

# Country
on_culture_promoted = {
}

# Country
on_culture_demoted = {
}

# Country
on_primary_culture_changed = {
}

# FROM = Previous Country, ROOT = Province
on_company_chartered = {
}

# ROOT = Overlord, FROM = Minor
on_dependency_gained = {
	if = {
		limit = {
			has_estate_privilege = estate_nobles_feudatory_annexation
			FROM = { is_subject_of_type = feudatory }
		}
		FROM = {
			add_opinion = {
				who = ROOT
				modifier = feudal_consolidation_opinion
			}
		}
	}
}

# ROOT = Overlord, FROM = Minor
on_dependency_lost = {
	if = {
		limit = {
			FROM = {
				has_opinion_modifier = {
					who = ROOT
					modifier = feudal_consolidation_opinion
				}
			}
		}
		FROM = {
			remove_opinion = {
				who = ROOT
				modifier = feudal_consolidation_opinion
			}
		}
	}
}

# ROOT = New vassal, FROM = Overlord
on_create_vassal = {
}

# ROOT = Country establishing it
# First province in state is set
on_holy_order_established = {
}

# When a minority is expelled to a colony
# THIS = Colony, ROOT = Colony, FROM = Home province
on_minority_expelled = {
}

# Country - ROOT = Raiding country, FROM = Sea province
on_raid_coast = {
	if = {
		limit = {
			has_faction = pr_buccaneers
		}
		add_faction_influence = {
			faction = pr_buccaneers
			influence = 1
		}
	}
	# Give Pirates CB to targets of Raid Coast
	FROM = {
		every_neighbor_province = {
			limit = { is_sea = no }
			owner = {
				if = {
					limit = {
						NOT = {
							has_casus_belli = {
								type = cb_pirates
								target = ROOT
							}
						}
					}
					
					add_casus_belli = {
						target = ROOT
						type = cb_pirates
						months = 120
					}
				}
			}
		}
	}
}

# Country - ROOT = Winner, FROM = Loser
on_flagship_captured = {
	FROM = { set_country_flag = captured_flagship_country_flag }
}

# Country - ROOT = Winner, FROM = Loser
on_flagship_destroyed = {
	FROM = { set_country_flag = sunk_flagship_country_flag }
}

# Country - ROOT = Subject, FROM = Overlord
on_country_released = {
}


# ROOT = province, FROM = country
on_trade_good_changed = {
	on_trade_good_changed_estate_privileges_effect = yes
}

# this = country
on_loan_repaid = {
	on_loan_repaid_estate_privileges_effect = yes
}

# this = country
on_rebels_break_country = {
	add_country_modifier = {
		name = just_lost_to_rebels
		duration = 10
		hidden = yes
	}
}

# this = country
## Fires when you fire or replace your ADM advisor, in the moment before they are actually removed from their post.
## Note: Defining a new advisor here will result in the shortest appointment in history. Use on_post_adm_advisor_fired instead :)
on_pre_adm_advisor_fired = {
	if = {
		limit = {
			has_country_flag = need_to_fire_adm_advisor
		}
		set_country_flag = just_fired_adm_advisor
		remove_advisor_by_category_no_action = ADM
	}
}

# this = country
on_pre_dip_advisor_fired = {
	if = {
		limit = {
			has_country_flag = need_to_fire_dip_advisor
		}
		set_country_flag = just_fired_dip_advisor
		remove_advisor_by_category_no_action = DIP
	}
}

# this = country
on_pre_mil_advisor_fired = {
	if = {
		limit = {
			has_country_flag = need_to_fire_mil_advisor
		}
		set_country_flag = just_fired_mil_advisor
		remove_advisor_by_category_no_action = MIL
	}
}

# this = country
on_post_adm_advisor_fired = {
}

# this = country
on_post_dip_advisor_fired = {
}

# this = country
on_post_mil_advisor_fired = {
}

# this = new client state, from = parent country
on_create_client_state = {
}

# this = new target, from = previous target (both can be non-existent tag)
on_change_revolution_target = {
}

# this = curia controller (enactor of the bull)
on_golden_bull_enacted = {
	set_country_flag = enacted_golden_bull
}


# province:  spawned whenever a new owner takes over the province
# FROM = The previous owner.
on_conquest = {
	remove_named_unrest = estate_land_seized
	clr_province_flag = has_estate_unrest_flag
}

on_country_creation = {
}

on_federation_leader_change = {
	if = {
		limit = { tag = FROM }
		disband_federation = THIS
	}
	else = {
		# New strongest member becomes the new federation leader
		set_federation_leader = THIS
	}
}

#FROM = country pillaged, ROOT = country doing the pillaging
on_pillaged_capital = {
}

#FROM = country dev was transferred from, ROOT = country doing the transferring
on_transfer_development = {
}

on_colonial_type_change = {
	clr_country_flag = encourage_cash_crops_flag
}

on_estate_led_regency = {
}

on_estate_led_regency_surpassed = {
}

on_extended_regency = {
}

on_estate_removed = {
}

##scope = colony province, FROM = owner country or province if there's a minority expulsion source, fires when the colony is created
on_colony_established = {
}

#scope = new country, FROM = parent country
on_colonial_nation_established = {
}

##scope = colony province, FROM = owner country or province if there's a minority expulsion source
on_colonist_boosting_colony = {
	hidden_effect = {
		if = {
			limit = {
				OR = {
					religion = noreligion
					#test if colonists outnumber natives
					variable_arithmetic_trigger = {
						custom_tooltip = colonysize_is_larger_than_nativesize_tt
						export_to_variable = {
							which = vab_colonysize
							value = trigger_value:colonysize
						}
						export_to_variable = {
							which = vab_nativesize
							value = trigger_value:native_size
						}
						multiply_variable = {
							which = vab_nativesize
							value = 100
						}
						check_variable = {
							which = vab_colonysize
							which = vab_nativesize
						}
					}
					is_in_capital_area = yes
					NOT = {
						OR = {
							has_dlc = "Dharma"
							has_dlc = "Wealth of Nations"
						}
					}
				}
			}
			change_religion = FROM
		}
		if = {
			limit = {
				OR = {
					culture = noculture
					#test if colonists outnumber natives
					variable_arithmetic_trigger = {
						custom_tooltip = colonysize_is_larger_than_nativesize_tt
						export_to_variable = {
							which = vab_colonysize
							value = trigger_value:colonysize
						}
						export_to_variable = {
							which = vab_nativesize
							value = trigger_value:native_size
						}
						multiply_variable = {
							which = vab_nativesize
							value = 100
						}
						check_variable = {
							which = vab_colonysize
							which = vab_nativesize
						}
					}
					is_in_capital_area = yes
					NOT = {
						OR = {
							has_dlc = "Dharma"
							has_dlc = "Wealth of Nations"
						}
					}
				}
			}
			change_culture = FROM
			change_original_culture = FROM
		}
	}
}

#ROOT = converted country, FROM = country which force converts ROOT, on_action gets called on Force religion peace and Enforce Religion subject interaction
on_force_conversion = {
}

on_institution_embracement = {
	if = {
		limit = {
			has_government_attribute = monarch_power_on_institutions
		}
		add_adm_power = 100
		add_dip_power = 100
		add_mil_power = 100
	}
}

on_national_focus_change = {
}
on_capital_moved = {
}

#ROOT = province that was expanded in, FROM = country that did it
on_expanded_infrastructure = {
}

#ROOT = province that was centralized in
on_centralized_state = {
}

# ROOT = country
monarch_on_shipwreck = {
}

#ROOT = country
monarch_on_shipwreck = {
}

heir_on_shipwreck = {
}

# ROOT = country
consort_on_shipwreck = {
}

# ROOT = country
on_defender_of_faith_loss = {
	clr_country_flag = claimed_defender_of_faith_flag
	remove_country_modifier = gov_improved_defender_of_faith_mod
}

# ROOT = country
on_defender_of_faith_claim = {
	set_country_flag = claimed_defender_of_faith_flag
	if = {
		limit = {
			has_government_attribute = improved_defender_of_faith
		}
		add_country_modifier = {
			name = gov_improved_defender_of_faith_mod
			duration = -1
		}
	}
}

# ROOT = country
on_hre_dismantled = {
}

# ROOT = country
on_new_age = {
	new_age_on_action_effect = yes
}

# ROOT = province
on_adm_exploited = {
}

# ROOT = province
on_dip_exploited = {
}

# ROOT = province
on_mil_exploited = {
}

# ROOT = province
on_raze = {
}

# ROOT = province
on_concentrate_development = {
}

on_slacken_start = {
	add_country_modifier = {
		name = slackening_modifier
		duration = -1
		hidden = yes
	}
}
on_slacken_stop = {
	remove_country_modifier = slackening_modifier
}

on_colony_finished = { #ROOT - Province
	on_colony_finished_effect = yes
}

on_advisor_hired = { #ROOT - Country
}

on_adm_advisor_hired = { #ROOT - Country, executed after on_advisor_hired!
}

on_dip_advisor_hired = { #ROOT - Country, executed after on_advisor_hired!
}

on_mil_advisor_hired = { #ROOT - Country, executed after on_advisor_hired!
}

on_core = { #ROOT - Province, #FROM - Country that gets the core
}

on_tech_taken = { #ROOT - Country
}

on_adm_tech_taken = { #ROOT - Country, executed after on_tech_taken!
}

on_dip_tech_taken = { #ROOT - Country, executed after on_tech_taken!
}

on_mil_tech_taken = { #ROOT - Country, executed after on_tech_taken!
} 

on_barrage = { #ROOT - barraging country, FROM - barraged province 
}

on_naval_barrage = { #ROOT - barraging country, FROM - barraged province 
}

on_scorch_earth  = { #ROOT - scorching country, FROM - scorched province
}

on_war_ended = { #ROOT - Winer FROM - Loser
	on_war_ended_usurp_overlord_effect = yes
}

on_alliance_broken = { #ROOT - Original alliance creator, FROM - Alliance accepter
	on_alliance_broken_effect = yes
}

on_royal_marriage_broken = { #ROOT - Original marriage creator, FROM - Marriage accepter
}

on_alliance_created = { #ROOT - Alliance sender, FROM - Alliance accepter
}

on_royal_marriage = { #ROOT - Marraige sender, FROM - marriage accepter
}

on_heir_disinherited = {
	#on_heir_disinherited_or_death_effect = yes
}

on_overrun = { #ROOT - winner, FROM - loser, on stackwipe
}