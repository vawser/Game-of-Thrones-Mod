# Contains effects for on_actions as well

# For loop effect
for_variable_amount = {
    set_variable = {
        which = ForLoopCounter
        which = $variable$
    }

    while = {
        limit = {
            check_variable = {
                which = ForLoopCounter
                value = 1
            }
        }
        $effect$
        subtract_variable = {
            which = ForLoopCounter
            value = 1
        }
    }
}

increase_issue_passed_counter = {
	hidden_effect = {
		change_variable = {
			which = issues_passed
			value = 1
		}
	}
}

on_colony_finished_effect = {
	# if = {
	# 	limit = {
	# 		owner = {
	# 			OR = {
	# 				has_country_modifier = colonial_venture_act_modifier
	# 				has_country_flag = can_select_trade_goods_for_colonies
	# 				has_government_attribute = selectable_trade_goods_for_colonies
	# 			}
	# 			NOT = { has_country_flag = eng_disabled_colonial_ventures }
	# 		}
	# 		NOT = { has_province_flag = had_trade_good_change_event }
	# 	}
	# 	set_province_flag = had_trade_good_change_event
	# 	province_event = {
	# 		id = flavor_gbr.200
	# 	}
	# }
}

on_alliance_broken_effect = {
	# if = {
	# 	limit = { has_country_modifier = mng_trade_access_in_china_modifier }
	# 	remove_country_modifier = mng_trade_access_in_china_modifier
	# }
	# if = {
	# 	limit = { has_country_modifier = rus_russian_caucasian_alliance FROM = { has_country_modifier = rus_russian_caucasian_alliance } }
	# 	remove_country_modifier = rus_russian_caucasian_alliance
	# 	FROM = { remove_country_modifier = rus_russian_caucasian_alliance }
	# }
	# if = {
	# 	limit = { has_country_modifier = gbr_english_dutch_trade_partners FROM = { has_country_modifier = gbr_english_dutch_trade_partners } }
	# 	remove_country_modifier = gbr_english_dutch_trade_partners
	# 	FROM = { remove_country_modifier = gbr_english_dutch_trade_partners }
	# }
	# if = {
	# 	limit = {
	# 		has_saved_global_event_target = tur_ottoman_trade_partner
	# 		OR = {
	# 			tag = event_target:tur_ottoman_trade_partner
	# 			FROM = { tag = event_target:tur_ottoman_trade_partner }
	# 		}
	# 	}
	# 	if = {
	# 		limit = { tag = event_target:tur_ottoman_trade_partner }
	# 		if = {
	# 			limit = { has_country_modifier = tur_ottoman_venetian_trade_deal_modifier }
	# 			remove_country_modifier = tur_ottoman_venetian_trade_deal_modifier
	# 		}
	# 		every_owned_province = {
	# 			limit = { has_province_modifier = tur_ottoman_venetian_trade_deal_modifier_prov }
	# 			remove_province_modifier = tur_ottoman_venetian_trade_deal_modifier_prov
	# 		}
	# 	}
	# 	FROM = {
	# 		if = {
	# 			limit = { tag = event_target:tur_ottoman_trade_partner }
	# 			if = {
	# 				limit = { has_country_modifier = tur_ottoman_venetian_trade_deal_modifier }
	# 				remove_country_modifier = tur_ottoman_venetian_trade_deal_modifier
	# 			}
	# 			every_owned_province = {
	# 				limit = { has_province_modifier = tur_ottoman_venetian_trade_deal_modifier_prov }
	# 				remove_province_modifier = tur_ottoman_venetian_trade_deal_modifier_prov
	# 			}
	# 		}
	# 	}
	# 	clear_global_event_target = tur_ottoman_trade_partner
	# }
	# FROM = {
	# 	if = {
	# 		limit = { has_country_modifier = mng_trade_access_in_china_modifier }
	# 		remove_country_modifier = mng_trade_access_in_china_modifier
	# 	}
	# }
}

on_startup_watch_commanders_effect = {
	NGT = {
		if = {
			limit = { has_no_watch_commander = { province_id = 16 } } 
			set_watch_commander = { province_id = 16 option = 0 }
		}
		# if = { # ABANDONED CASTLE
		# 	limit = { has_no_watch_commander = { province_id = 1580 } }
		# 	set_watch_commander = { province_id = 1580 option = 1 }
		# }
		# if = { # ABANDONED CASTLE
		# 	limit = { has_no_watch_commander = { province_id = 1584 } }
		# 	set_watch_commander = { province_id = 1584 option = 2 }
		# }
		if = {
			limit = { has_no_watch_commander = { province_id = 18 } } 
			set_watch_commander = { province_id = 18 option = 3 }
		}
	}
}

on_startup_great_projects_effect = {
	if = {
		limit = {
			NOT = { has_dlc = "Leviathan" }
		}
		226 = {
			add_province_modifier = {
				name = city_watch_no_dlc
				duration = -1
			}
		}
	}
	if = {
		limit = {
			NOT = { has_dlc = "Leviathan" }
		}
		27 = {
			add_province_triggered_modifier = great_sept_of_baelor
		}
	}
}

on_yearly_pulse_bandits_events_effect = {
	random_owned_province = {
		limit = { has_criminal_activity = { type = bandits } }
		random_list = {
			20 = {
				trigger = {
					NOT = { has_province_modifier = public_square_raided }
				}
				province_event = { id = banditry.11 }
			}
			10 = {
				trigger = {
					NOT = { has_province_modifier = town_hearths_raided }
				}
				modifier = {
					factor = 2
					development = 10
				}
				province_event = { id = banditry.12 }
			}
			10 = {
				trigger = {
					NOT = { has_province_modifier = city_granaries_raided }
					has_building = food_silo
				}
				province_event = { id = banditry.13 }
			}
			10 = {
				trigger = {
					has_port = yes
					NOT = { has_province_modifier = city_port_raided }
				}
				modifier = {
					factor = 2
					base_production = 4
				}
				modifier = {
					factor = 0
					has_any_navy_building = yes
				}
				province_event = { id = banditry.14 }
			}
			10 = {
				trigger = {
					NOT = { has_province_modifier = trade_route_raided }
				}
				modifier = {
					factor = 2
					province_trade_power = 5
				}
				modifier = {
					factor = 2
					province_trade_power = 10
				}
				province_event = { id = banditry.15 }
			}
			20 = {
				trigger = { current_crime_lvl = { amount = 15 } }
				modifier = {
					factor = 2
					current_crime_lvl = { amount = 25 }
				}
				modifier = {
					factor = 4
					current_crime_lvl = { amount = 40 }
				}
				save_event_target_as = banditprovince
				random_neighbor_province = {
					limit = { owned_by = ROOT }
					province_event = { id = banditry.16 }
				}
			}
			20 = {
				trigger = { current_crime_lvl = { amount = 25 } }
				modifier = {
					factor = 4
					current_crime_lvl = { amount = 50 }
				}
				save_event_target_as = banditprovince
				random_neighbor_province = {
					limit = { owned_by = ROOT }
					province_event = { id = banditry.17 }
				}
			}
		}
	}
}

# Province
on_province_owner_change_government_effect = {
	if = {
		limit = {
			owner = {
				has_government_attribute = cheaper_developing_pastures
			}
			OR = {
				has_terrain = farmlands
				has_terrain = grasslands
			}
		}
		add_province_modifier = {
			name = cheaper_pasturelands_development
			duration = -1
			#hidden = yes
		}
	}
	if = {
		limit = {
			owner = { has_government_attribute = temples_modifier }
			has_any_taxation_building = yes
		}
		add_province_modifier = {
			name = gov_expanded_temple_rights_mod
			duration = -1
		}
	}
}

# Used for 'Usurp Overlord' casus belli aftermath
on_war_ended_usurp_overlord_effect = {
	# KEEP AT THE BOTTOM
	remove_temp_overlord_flag_effect = yes
	FROM = { remove_temp_overlord_flag_effect = yes }
}

#Country effect
enable_annexation_penalty = {
	custom_tooltip = enable_annexation_penalty_tt
	hidden_effect = {
		clr_country_flag = no_integrate_penalty
	}
}

#Country effect
disable_annexation_penalty = {
	custom_tooltip = disable_annexation_penalty_tt
	hidden_effect = {
		set_country_flag = no_integrate_penalty
		remove_country_modifier = annexers_legacy
	}
}

reveal_map = {
	reveal_westeros = yes
	reveal_west_essos = yes
}

reveal_westeros = {
	region_beyond_the_wall = { discover_country = ROOT }
	region_nights_watch = { discover_country = ROOT }
	region_the_north = { discover_country = ROOT }
	region_riverlands = { discover_country = ROOT }
	region_crownlands = { discover_country = ROOT }
	region_stormlands = { discover_country = ROOT }
	region_vale = { discover_country = ROOT }
	region_reach = { discover_country = ROOT }
	region_westerlands = { discover_country = ROOT }
	region_dorne = { discover_country = ROOT }
	narrow_sea_region = { discover_country = ROOT }
	sunset_sea_coast_area = { discover_country = ROOT }
	shivering_sea_coast_area = { discover_country = ROOT }
	dornish_coast_area = { discover_country = ROOT }
}

reveal_west_essos = {
	region_stepstones = { discover_country = ROOT }
	region_tyrosh = { discover_country = ROOT }
	region_lys = { discover_country = ROOT }
	region_volantis = { discover_country = ROOT }
	region_rhoyne = { discover_country = ROOT }
	region_myr = { discover_country = ROOT }
	region_pentos = { discover_country = ROOT }
	region_braavos = { discover_country = ROOT }
	region_lorath = { discover_country = ROOT }
	region_norvos = { discover_country = ROOT }
	region_qohor = { discover_country = ROOT }
	region_sarnor = { discover_country = ROOT }
	narrow_sea_region = { discover_country = ROOT }
	orange_shore_area = { discover_country = ROOT }
	lorathi_coast_area = { discover_country = ROOT }
}

#Credits for that script goes to Stiopa
for = {
	[[custom_tooltip]custom_tooltip = $custom_tooltip$]
	hidden_effect = {
		set_variable = {
			which = ForLoopCounter
			value = $amount$
		}	
		while = {
			limit = {
				check_variable = {
					which = ForLoopCounter
					value = 1
				}
			}
			$effect$
			subtract_variable = {
				which = ForLoopCounter
				value = 1
			}
		}
	}
}